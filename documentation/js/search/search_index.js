var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.505,1,2.274]],["body/controllers/AppController.html",[0,2.423,1,3.661,2,1.943,3,0.35,4,0.309,5,0.309,6,3.717,7,0.531,8,1.841,9,5.287,10,1.81,11,0.026,12,0.858,13,4.396,14,1.476,15,1.411,16,0.723,17,0.987,18,3.325,19,3.717,20,0.35,21,0.074,22,2.091,23,2.447,24,2.091,25,1.578,26,4.396,27,0.02,28,0.02]],["title/modules/AppModule.html",[29,1.309,30,2.274]],["body/modules/AppModule.html",[1,3.334,2,1.907,3,0.244,4,0.215,5,0.215,11,0.026,16,0.854,17,0.689,18,3.297,19,2.593,20,0.244,21,0.052,27,0.016,28,0.016,29,1.918,30,4.477,31,1.458,32,1.458,33,1.707,34,1.707,35,1.458,36,2.779,37,1.707,38,2.593,39,2.593,40,2.593,41,3.596,42,3.041,43,3.596,44,3.596,45,2.439,46,2.402,47,1.707,48,1.707,49,3.066,50,3.21,51,3.066,52,3.066,53,3.066,54,1.862,55,3.066,56,4.315,57,4.315,58,2.048,59,2.882,60,3.066,61,3.066,62,2.882,63,3.066,64,4.315,65,4.315]],["title/injectables/AppService.html",[18,1.896,66,0.819]],["body/injectables/AppService.html",[3,0.369,4,0.326,5,0.326,7,0.56,8,1.902,9,5.386,11,0.025,12,0.905,14,1.557,15,1.458,16,0.612,17,1.041,18,3.153,20,0.369,21,0.078,25,1.664,27,0.021,28,0.021,66,1.362,67,2.049,68,3.92,69,4.635,70,4.635,71,4.635]],["title/classes/Auth.html",[21,0.058,72,2.274]],["body/classes/Auth.html",[3,0.413,4,0.364,5,0.364,11,0.024,20,0.413,21,0.087,27,0.022,28,0.022,72,4.042,73,1.859,74,4.379]],["title/controllers/AuthController.html",[0,1.505,75,2.274]],["body/controllers/AuthController.html",[0,1.075,2,1.075,3,0.194,4,0.171,5,0.171,7,0.294,8,1.224,10,2,11,0.026,12,0.948,14,1.631,16,0.721,17,0.546,20,0.194,21,0.041,24,1.157,25,1.869,27,0.014,28,0.014,72,2.435,75,2.435,76,2.056,77,1.809,78,3.06,79,3.698,80,3.698,81,3.083,82,4.373,83,2.056,84,3.318,85,5.827,86,4.79,87,2.432,88,2.432,89,2,90,1.25,91,0.881,92,1.744,93,2.435,94,2.432,95,4.334,96,3.154,97,2.432,98,2.432,99,2.432,100,3.649,101,2.432,102,2.432,103,2.432,104,2.432,105,2.432,106,1.809,107,2.712,108,1.809,109,1.809,110,1.624,111,2.08,112,2.056,113,2.432,114,2.056,115,2.056,116,3.476,117,2.056,118,1.477,119,2.432,120,1.354,121,2.432,122,2.712,123,2.432,124,2.432,125,2.432,126,1.611,127,2.656,128,2.921,129,2.03,130,2.432,131,2.432,132,3.646,133,2.656,134,3.253,135,2.432,136,2.432,137,2.056,138,2.432,139,2.432,140,2.432,141,2.435,142,2.432,143,2.432,144,2.432,145,2.432,146,2.432]],["title/injectables/AuthGuard.html",[62,2.274,66,0.819]],["body/injectables/AuthGuard.html",[3,0.465,4,0.229,5,0.229,7,0.393,8,1.511,11,0.026,12,1.006,14,1.511,16,0.734,17,0.731,20,0.259,21,0.055,22,1.549,25,1.851,27,0.017,28,0.017,58,2.175,62,3.443,66,1.082,67,1.439,89,2.123,90,1.327,91,0.816,92,1.851,96,1.813,117,2.753,120,1.813,126,1.439,147,2.753,148,3.005,149,4.499,150,4.359,151,4.499,152,2.753,153,5.103,154,3.256,155,3.804,156,3.714,157,3.256,158,2.422,159,4.499,160,2.776,161,3.256,162,5.561,163,3.804,164,3.256,165,2.175,166,2.422,167,2.422,168,3.804,169,3.256,170,2.753,171,2.753,172,1.672,173,3.256,174,3.005,175,3.256,176,3.256,177,3.256,178,1.439]],["title/modules/AuthModule.html",[29,1.309,41,2.068]],["body/modules/AuthModule.html",[2,2.001,3,0.262,4,0.231,5,0.231,11,0.026,16,0.834,17,0.738,20,0.262,21,0.055,27,0.017,28,0.017,29,1.99,31,1.563,32,1.563,33,1.829,34,1.829,35,1.563,36,2.884,37,2.884,41,4.125,42,3.108,46,2.52,47,1.829,48,1.829,50,3.367,75,3.459,111,2.879,112,2.778,165,2.194,172,1.687,179,2.778,180,3.285,181,2.778,182,2.778,183,3.675,184,3.285,185,3.285,186,2.778,187,2.778,188,1.995,189,1.829,190,2.444,191,4.527,192,3.285,193,3.285,194,3.285,195,2.444,196,2.444,197,3.285,198,2.778,199,3.285]],["title/injectables/AuthService.html",[66,0.819,111,1.62]],["body/injectables/AuthService.html",[3,0.141,4,0.124,5,0.124,7,0.214,8,0.957,11,0.026,12,0.876,14,1.376,16,0.665,17,0.398,20,0.141,21,0.03,22,1.356,23,1.587,25,1.612,27,0.011,28,0.011,45,1.687,54,1.076,66,0.686,67,0.784,78,2.778,79,2.411,80,2.411,81,2.411,83,2.411,84,2.726,89,1.849,90,1.349,91,0.814,92,1.612,93,1.991,111,1.356,114,1.499,115,1.499,126,2.665,127,2.726,128,2.998,129,2.919,133,1.076,156,1.184,160,1.701,172,3.016,174,1.904,178,1.984,188,1.076,189,0.987,190,1.319,195,2.66,196,1.319,198,1.499,200,1.499,201,2.851,202,1.319,203,4.263,204,1.773,205,1.904,206,2.851,207,3.796,208,3.048,209,1.773,210,1.499,211,1.773,212,2.851,213,1.773,214,2.851,215,2.67,216,1.773,217,1.184,218,1.184,219,1.773,220,1.319,221,2.121,222,2.411,223,1.975,224,1.773,225,1.773,226,1.773,227,1.773,228,1.773,229,1.773,230,1.499,231,2.121,232,2.121,233,1.499,234,1.499,235,1.499,236,2.411,237,1.499,238,2.305,239,2.851,240,2.851,241,1.499,242,1.587,243,1.499,244,2.121,245,1.581,246,1.701,247,1.356,248,1.499,249,2.851,250,2.411,251,2.851,252,2.851,253,2.411,254,1.773,255,1.773,256,1.773,257,1.773,258,1.773,259,1.773,260,2.411,261,1.773,262,1.773,263,1.773,264,2.851,265,1.773,266,1.731,267,2.411,268,3.024,269,0.73,270,2.411,271,1.319,272,1.499,273,1.499,274,1.499,275,1.499,276,1.773]],["title/classes/CreateAuthDto.html",[21,0.058,100,2.274]],["body/classes/CreateAuthDto.html",[3,0.284,4,0.25,5,0.25,7,0.43,10,2.223,11,0.026,12,1.21,15,1.595,16,0.631,20,0.284,21,0.081,27,0.018,28,0.018,73,1.278,90,1.389,91,1.124,100,3.194,223,2.223,238,2.772,246,2.949,247,2.568,269,2.223,277,5.355,278,3.01,279,1.316,280,2.072,281,3.56,282,3.01,283,3.56,284,3.183,285,3.56,286,3.56,287,3.56,288,3.56,289,2.378,290,2.378,291,3.557,292,1.693]],["title/classes/CreateProductDto.html",[21,0.058,293,1.896]],["body/classes/CreateProductDto.html",[3,0.283,4,0.249,5,0.249,7,0.428,10,2.219,11,0.025,12,1.235,15,1.483,16,0.468,20,0.283,21,0.081,27,0.018,28,0.018,73,1.274,90,1.387,91,1.148,247,2.564,269,2.219,279,1.313,280,2.365,284,2.768,290,3.85,292,1.688,293,2.656,294,5.44,295,2.64,296,5.39,297,4.009,298,5.39,299,5.39,300,3.549,301,3.549,302,3.549,303,3.549,304,3.549,305,2.64,306,3.549,307,3.549,308,3.549,309,3.549,310,3.187]],["title/classes/CreateUserDto.html",[21,0.058,215,1.896]],["body/classes/CreateUserDto.html",[3,0.305,4,0.269,5,0.269,7,0.463,10,2.067,11,0.026,12,1.204,15,1.629,16,0.506,20,0.305,21,0.085,27,0.019,28,0.019,73,1.376,90,1.441,91,1.119,215,2.795,223,2.306,238,2.875,247,2.663,269,2.306,279,1.381,280,2.134,284,3.167,290,2.559,292,1.823,311,5.352,312,2.133,313,3.24,314,3.24,315,3.24,316,2.559,317,3.24]],["title/classes/FilterUserDto.html",[21,0.058,318,2.068]],["body/classes/FilterUserDto.html",[3,0.271,4,0.239,5,0.239,7,0.41,11,0.026,12,1.193,15,1.573,16,0.611,20,0.369,21,0.078,27,0.017,28,0.017,73,1.219,90,1.525,91,1.109,92,2.287,223,2.439,245,2.047,247,2.203,269,1.907,279,1.274,280,2.032,284,1.744,290,2.268,292,1.615,310,2.268,312,1.891,313,2.872,315,2.872,316,2.268,317,2.872,318,2.812,319,4.654,320,4.456,321,4.456,322,4.547,323,5.27,324,2.872,325,3.396,326,2.872,327,3.396,328,2.526]],["title/injectables/JwtStrategy.html",[66,0.819,183,2.068]],["body/injectables/JwtStrategy.html",[3,0.3,4,0.265,5,0.265,7,0.455,8,1.667,11,0.026,12,0.969,14,1.265,16,0.779,17,0.846,20,0.3,21,0.064,22,2.641,25,1.352,27,0.018,28,0.018,66,1.194,67,1.665,78,2.851,89,1.551,90,1.278,91,0.683,92,1.352,93,2.097,148,3.315,165,2.516,167,2.802,183,3.014,189,2.097,196,2.802,210,3.185,223,1.551,245,1.665,246,1.792,329,3.185,330,4.964,331,4.695,332,4.964,333,3.766,334,4.964,335,3.766,336,3.766,337,3.766,338,3.185,339,3.766,340,3.766,341,3.766,342,3.766,343,3.766,344,3.185,345,3.766,346,3.766,347,3.766,348,3.766,349,3.766]],["title/interfaces/Links.html",[350,1.896,351,2.068]],["body/interfaces/Links.html",[3,0.317,4,0.28,5,0.28,7,0.481,11,0.026,15,1.752,20,0.41,21,0.067,27,0.019,28,0.019,91,1.094,279,1.417,280,2.166,350,2.218,351,3.662,352,2.963,353,2.963,354,4.486,355,4.486,356,4.028,357,4.486,358,2.218,359,3.369,360,3.369,361,3.369,362,3.369]],["title/injectables/LoggingInterceptor.html",[59,2.274,66,0.819]],["body/injectables/LoggingInterceptor.html",[3,0.251,4,0.221,5,0.221,7,0.38,8,1.475,11,0.026,12,0.857,14,1.056,16,0.668,17,0.706,20,0.251,21,0.053,23,2.818,24,2.407,25,1.967,27,0.016,28,0.016,59,2.933,66,1.056,67,1.39,86,4.632,89,1.295,90,0.809,91,0.57,92,1.129,96,2.818,118,1.91,126,2.639,133,3.326,141,2.1,156,3.659,158,2.339,178,1.941,279,1.208,356,3.38,363,2.659,364,3.659,365,4.392,366,4.392,367,5.478,368,3.145,369,4.279,370,2.1,371,1.91,372,4.392,373,3.145,374,4.392,375,2.339,376,2.339,377,3.145,378,3.145,379,3.145,380,3.145,381,3.145,382,3.145,383,3.145,384,3.145,385,3.145,386,2.659,387,4.392,388,4.392,389,4.392,390,3.145,391,2.339,392,3.145,393,2.659,394,3.145,395,3.145]],["title/classes/Pagination.html",[21,0.058,358,1.896]],["body/classes/Pagination.html",[3,0.307,4,0.271,5,0.271,7,0.466,11,0.026,12,1.206,15,1.533,20,0.402,21,0.065,27,0.019,28,0.019,73,1.385,91,1.121,92,1.811,279,1.388,280,2.353,350,2.148,351,3.851,353,2.87,354,2.87,355,2.87,356,2.577,357,2.87,358,2.808,359,4.751,360,4.751,361,4.751,362,4.751,396,3.859,397,3.859,398,3.859,399,3.859,400,3.859]],["title/modules/PrismaModule.html",[29,1.309,42,1.749]],["body/modules/PrismaModule.html",[3,0.334,4,0.295,5,0.295,11,0.025,16,0.702,17,0.943,20,0.334,21,0.071,27,0.02,28,0.02,29,2.247,31,1.996,32,1.996,33,2.336,34,2.336,35,1.996,36,3.255,37,3.255,42,3.382,45,2.824,46,2.963,47,2.336,48,2.336,401,3.548,402,3.548,403,4.195,404,4.195,405,4.195]],["title/injectables/PrismaService.html",[45,1.402,66,0.819]],["body/injectables/PrismaService.html",[3,0.351,4,0.221,5,0.221,7,0.381,8,1.478,11,0.026,12,0.989,14,1.059,16,0.581,17,0.708,20,0.251,21,0.053,22,2.411,23,2.822,24,2.411,27,0.016,28,0.016,45,1.812,66,1.059,67,1.394,78,2.603,129,1.756,141,3.385,148,2.939,167,2.346,178,1.945,205,2.106,279,1.211,289,2.106,364,3.663,370,2.106,371,1.915,376,2.346,386,2.667,391,2.346,393,2.667,406,2.667,407,5.069,408,5.975,409,3.154,410,3.154,411,4.401,412,3.154,413,3.154,414,3.154,415,5.485,416,5.485,417,5.485,418,3.721,419,3.154,420,3.154,421,3.154,422,3.154,423,3.154,424,3.154,425,3.154,426,3.154,427,3.154,428,3.154,429,4.401,430,3.154]],["title/classes/Product.html",[21,0.058,431,2.068]],["body/classes/Product.html",[3,0.413,4,0.364,5,0.364,11,0.024,20,0.413,21,0.087,27,0.022,28,0.022,73,1.859,431,3.675,432,4.379]],["title/controllers/ProductController.html",[0,1.505,433,2.274]],["body/controllers/ProductController.html",[0,1.214,2,1.214,3,0.219,4,0.193,5,0.193,7,0.332,8,1.339,10,2.253,11,0.026,12,1.068,14,1.838,15,1.583,16,0.722,17,0.617,20,0.219,21,0.046,24,1.306,25,1.965,27,0.015,28,0.015,77,2.043,89,2.122,90,1.326,91,0.935,92,1.85,95,4.07,96,2.869,106,2.966,107,3.493,108,2.043,109,2.043,110,1.834,118,1.668,120,1.529,122,2.043,126,1.214,242,2.614,245,2.523,266,2.421,293,3.178,431,1.668,433,2.663,434,2.322,435,3.441,436,2.663,437,2.663,438,2.322,439,2.746,440,2.746,441,2.746,442,1.834,443,3.372,444,2.746,445,1.834,446,3.372,447,2.746,448,1.834,449,3.664,450,3.372,451,2.746,452,2.322,453,2.322,454,2.614,455,2.322,456,1.834,457,2.966,458,1.834,459,2.746,460,2.663,461,2.746,462,2.746,463,2.746,464,2.322,465,2.746,466,2.746,467,2.746,468,2.322,469,2.746]],["title/modules/ProductModule.html",[29,1.309,43,2.068]],["body/modules/ProductModule.html",[2,2.303,3,0.323,4,0.285,5,0.285,11,0.026,16,0.801,17,0.911,20,0.323,21,0.069,27,0.019,28,0.019,29,2.211,31,1.93,32,1.93,33,2.259,34,2.259,35,1.93,36,3.204,37,2.259,43,4.02,45,2.647,46,2.9,47,2.259,48,2.259,54,2.463,433,3.844,454,3.578,455,3.43,470,3.43,471,3.43,472,4.057,473,4.057]],["title/injectables/ProductService.html",[66,0.819,454,1.896]],["body/injectables/ProductService.html",[3,0.198,4,0.174,5,0.174,7,0.3,8,1.243,11,0.026,12,1.074,14,1.915,15,1.263,16,0.647,17,0.557,20,0.198,21,0.042,22,1.18,25,1.885,27,0.014,28,0.014,45,2.02,54,1.507,66,0.89,67,1.097,78,2.273,89,2.161,90,1.468,91,0.952,92,1.885,93,1.381,120,1.381,126,1.097,127,2.247,129,1.381,133,1.507,134,1.846,172,1.9,178,1.636,202,1.846,205,2.472,231,2.753,232,2.753,242,2.732,244,2.753,245,2.433,266,2.247,280,2.251,293,3.064,431,2.979,435,3.277,436,2.472,437,2.472,438,3.129,442,2.472,445,2.472,448,2.472,449,3.463,454,2.06,456,1.657,457,2.753,458,1.657,460,3.505,474,2.098,475,2.481,476,2.481,477,2.481,478,2.481,479,2.481,480,2.481,481,2.481,482,2.481,483,2.481,484,2.481,485,2.481,486,2.481,487,2.481,488,2.481,489,4.149,490,2.481,491,2.098]],["title/guards/RolesGuard.html",[492,2.533,493,2.274]],["body/guards/RolesGuard.html",[3,0.271,4,0.239,5,0.239,7,0.41,8,1.555,11,0.026,12,0.904,14,1.14,16,0.695,17,0.763,20,0.271,21,0.057,22,1.615,23,2.578,24,2.203,25,1.663,27,0.017,28,0.017,58,2.268,66,1.114,89,1.907,90,1.192,91,0.84,92,1.663,96,1.891,120,1.891,126,2.329,141,2.268,150,5.009,152,2.872,153,5.169,155,2.872,156,3.781,158,3.445,170,2.872,171,2.872,172,1.744,178,1.501,217,2.268,218,2.268,246,2.692,279,0.934,344,2.872,364,3.52,369,4.456,375,2.526,376,2.526,391,2.526,493,3.093,494,3.396,495,2.872,496,3.396,497,3.396,498,4.631,499,3.916,500,3.396,501,3.396,502,3.396,503,3.396,504,3.396,505,3.396,506,2.872,507,3.396,508,3.396]],["title/classes/SignInAuthDto.html",[21,0.058,84,2.068]],["body/classes/SignInAuthDto.html",[3,0.345,4,0.304,5,0.304,7,0.522,10,2.235,11,0.026,12,1.059,15,1.6,16,0.571,20,0.345,21,0.092,27,0.02,28,0.02,73,1.554,84,3.296,91,0.984,223,2.442,238,3.045,279,1.493,284,3.289,291,3.219,292,2.058,509,5.014,510,3.659,511,4.327,512,4.327]],["title/classes/UpdatePasswordUserDto.html",[21,0.058,513,2.274]],["body/classes/UpdatePasswordUserDto.html",[3,0.339,4,0.299,5,0.299,7,0.514,10,2.213,11,0.025,12,1.049,15,1.383,16,0.562,20,0.339,21,0.091,27,0.02,28,0.02,73,1.53,91,0.975,238,3.342,269,2.424,279,1.479,280,1.93,284,3.175,292,2.026,305,3.169,310,3.59,312,2.372,314,3.602,316,2.845,513,3.59,514,4.38]],["title/classes/UpdateProductDto.html",[21,0.058,449,2.068]],["body/classes/UpdateProductDto.html",[3,0.382,4,0.337,5,0.337,11,0.025,16,0.763,20,0.382,21,0.081,27,0.021,28,0.021,73,1.722,148,3.862,242,2.67,293,2.67,295,3.568,449,3.511,457,3.568,515,4.056,516,5.782,517,4.796,518,4.056,519,4.056]],["title/classes/UpdateUserDto.html",[21,0.058,520,2.068]],["body/classes/UpdateUserDto.html",[3,0.322,4,0.284,5,0.284,7,0.488,10,2.366,11,0.026,12,1.121,15,1.561,16,0.533,20,0.322,21,0.088,27,0.019,28,0.019,73,1.451,90,1.478,91,1.042,223,2.366,269,2.366,279,1.43,280,1.866,282,3.418,284,3.221,291,3.866,292,1.923,305,3.007,310,3.471,312,2.25,316,2.7,324,3.418,514,4.511,520,3.156,521,4.042]],["title/interfaces/User.html",[160,1.62,350,1.896]],["body/interfaces/User.html",[3,0.329,4,0.29,5,0.29,7,0.499,11,0.026,15,1.662,20,0.329,27,0.02,28,0.02,90,1.574,91,1.146,160,2.508,223,2.518,245,2.703,247,2.908,269,2.518,279,1.451,280,2.41,350,2.301,352,3.074,522,3.495]],["title/controllers/UserController.html",[0,1.505,523,2.274]],["body/controllers/UserController.html",[0,0.71,2,0.71,3,0.128,4,0.113,5,0.113,7,0.194,8,0.883,10,1.991,11,0.026,12,0.944,14,1.624,15,1.179,16,0.689,17,0.361,20,0.128,21,0.027,24,0.764,25,1.737,27,0.01,28,0.01,77,1.194,78,2.352,89,1.991,90,1.245,91,0.877,92,1.737,93,1.464,95,3.407,96,3.491,106,1.957,107,3.407,108,1.194,109,1.194,110,1.072,116,1.757,118,0.975,120,0.894,122,1.194,126,2.529,127,0.975,128,1.757,129,0.894,160,0.764,174,2.232,178,1.477,215,2.55,217,1.072,218,1.072,220,2.486,242,1.464,245,2.231,246,0.764,253,2.826,266,2.029,273,3.606,280,1.876,318,2.346,351,1.597,354,1.194,355,1.194,356,1.072,357,1.194,358,1.86,418,2.224,435,2.232,436,1.757,437,1.757,442,1.072,443,2.224,445,1.072,446,2.224,448,1.072,450,2.224,452,1.357,453,1.357,456,1.072,458,1.072,460,2.581,464,1.357,468,1.357,493,1.072,520,3.065,523,1.757,524,1.357,525,3.342,526,1.605,527,2.63,528,2.63,529,1.605,530,1.357,531,1.605,532,1.605,533,1.357,534,1.605,535,2.224,536,1.605,537,1.605,538,1.605,539,2.224,540,1.605,541,1.605,542,1.605,543,1.605,544,1.605,545,1.86,546,1.357,547,1.605,548,1.194,549,1.605,550,1.605,551,1.357,552,1.605,553,1.605,554,1.605,555,4.264,556,1.605,557,1.605,558,1.605,559,1.605,560,2.224,561,1.605,562,3.342,563,1.605,564,2.486,565,2.224,566,2.826,567,2.63,568,2.63,569,2.874,570,3.864,571,1.605,572,2.63,573,1.605,574,2.63,575,1.605,576,2.63,577,1.605,578,1.605,579,1.605,580,1.605,581,1.605,582,3.342,583,1.605,584,2.63,585,2.63,586,2.63,587,3.267,588,2.63,589,1.605,590,1.605,591,1.605,592,1.605,593,1.605,594,1.605,595,1.605]],["title/modules/UserModule.html",[29,1.309,44,2.068]],["body/modules/UserModule.html",[2,2.184,3,0.298,4,0.263,5,0.263,11,0.026,16,0.829,17,0.84,20,0.298,21,0.063,27,0.018,28,0.018,29,2.127,31,1.779,32,1.779,33,2.083,34,2.083,35,1.779,36,3.081,37,2.083,42,3.228,44,4.038,46,2.751,47,2.083,48,2.083,50,3.676,111,2.99,186,3.163,187,4.179,188,2.272,523,3.696,545,3.5,546,3.163,596,3.163,597,3.741,598,3.163,599,3.741,600,3.741,601,3.163]],["title/injectables/UserService.html",[66,0.819,545,1.896]],["body/injectables/UserService.html",[3,0.082,4,0.072,5,0.072,7,0.124,8,0.603,11,0.026,12,0.846,14,1.306,15,0.742,16,0.669,17,0.23,20,0.082,21,0.017,22,0.854,23,2.009,24,1.141,25,1.396,27,0.007,28,0.007,45,1.187,54,0.622,66,0.432,67,0.453,78,2.791,89,1.7,90,1.356,91,0.749,92,1.482,93,1.825,110,0.684,111,1.849,126,2.465,127,2.842,128,1.2,129,2.516,133,1.99,134,2.144,137,0.866,160,2.506,163,2.028,172,3.004,174,2.757,178,2.329,188,0.622,189,0.57,190,0.762,195,0.762,202,0.762,203,3.288,205,1.2,208,0.762,215,2.009,217,0.684,218,0.684,220,2.144,221,1.336,222,2.028,223,1.7,230,0.866,231,2.144,232,2.144,233,0.866,234,0.866,235,1.519,236,1.519,237,0.866,238,1.683,241,0.866,242,1.604,243,0.866,244,2.438,245,2.493,246,2.227,247,1.559,248,0.866,250,2.437,260,2.437,266,2.745,267,1.519,268,0.866,269,1.187,270,0.866,271,0.762,272,0.866,275,0.866,279,0.494,280,1.952,289,0.684,318,1.75,320,2.028,321,2.771,322,0.762,326,0.866,328,1.336,358,1.604,364,1.925,370,0.684,371,0.622,435,1.2,436,1.2,437,1.2,442,1.2,445,1.2,448,1.2,456,0.684,458,1.2,460,2.897,489,0.866,491,0.866,499,1.519,506,0.866,513,1.2,520,2.507,530,1.519,533,1.519,535,0.866,539,2.028,545,1,551,0.866,560,1.519,564,1.336,565,0.866,566,0.866,569,0.762,587,3.051,601,0.866,602,0.866,603,1.796,604,1.796,605,1.025,606,1.025,607,1.025,608,1.025,609,1.796,610,1.025,611,1.025,612,1.025,613,1.796,614,1.025,615,1.796,616,1.025,617,1.025,618,1.025,619,1.025,620,2.882,621,2.399,622,1.025,623,1.025,624,1.025,625,1.025,626,1.796,627,1.025,628,1.025,629,0.866,630,0.866,631,1.025,632,1.796,633,1.025,634,1.796,635,1.025,636,1.796,637,1.025,638,1.025,639,1.796,640,1.025,641,1.025,642,1.025,643,1.025,644,1.796,645,1.025,646,1.796,647,1.025,648,1.025,649,1.025,650,2.399,651,2.399,652,2.399,653,1.796,654,1.519,655,1.796,656,2.882,657,1.796,658,1.796,659,1.025,660,1.025,661,1.796,662,1.025,663,1.025,664,1.025,665,1.025,666,1.025,667,1.025,668,1.025,669,1.025]],["title/coverage.html",[670,3.451]],["body/coverage.html",[0,2.264,1,1.812,5,0.191,6,2.294,11,0.026,18,1.51,21,0.107,27,0.015,28,0.015,35,1.29,45,1.117,59,1.812,62,1.812,66,1.446,68,2.294,72,1.812,74,2.294,75,1.812,76,2.294,84,1.647,91,0.492,100,1.812,111,1.29,116,1.812,147,2.294,160,1.29,166,2.018,178,1.199,183,1.647,189,1.51,200,2.294,215,1.51,238,1.393,277,2.294,278,2.294,293,1.51,294,2.294,295,2.94,311,2.294,312,2.852,318,1.647,319,2.018,329,2.294,350,2.2,351,1.647,353,2.94,358,1.51,363,2.294,406,2.294,431,1.647,432,2.294,433,1.812,434,2.294,449,1.647,454,1.51,474,2.294,492,2.018,493,1.812,495,2.294,509,2.294,510,2.294,513,1.812,514,2.94,515,2.294,520,1.647,522,2.294,523,1.812,524,2.294,545,1.51,548,2.018,569,5.135,602,2.294,670,2.018,671,2.712,672,2.712,673,2.712,674,3.952,675,3.952,676,5.122,677,5.445,678,5.122,679,4.662,680,6.013,681,3.952,682,2.712,683,2.018,684,5.122,685,3.342,686,2.018,687,2.294,688,2.712,689,2.712,690,2.712]],["title/dependencies.html",[32,1.947,691,2.408]],["body/dependencies.html",[11,0.026,17,0.968,21,0.091,27,0.02,28,0.02,32,2.05,58,2.879,118,2.617,165,2.879,188,2.617,221,3.206,289,2.879,292,2.05,331,3.644,338,3.644,375,3.206,518,3.644,519,3.644,692,5.919,693,4.31,694,4.31,695,4.31,696,4.31,697,4.31,698,4.31,699,4.31,700,4.31,701,4.31,702,4.31,703,4.31,704,4.31,705,4.31,706,4.31,707,4.31,708,4.31,709,4.31,710,4.31]],["title/miscellaneous/enumerations.html",[711,1.585,712,3.461]],["body/miscellaneous/enumerations.html",[7,0.497,11,0.025,27,0.02,28,0.02,90,1.354,160,2.502,208,3.912,223,2.166,245,2.325,246,2.502,247,2.502,269,2.166,274,3.482,312,2.928,319,3.063,322,3.912,328,3.912,371,4.131,629,4.447,630,4.447,654,4.447,683,3.063,686,3.063,711,2.292,712,3.482,713,3.482,714,4.117,715,3.482,716,4.117,717,4.117,718,4.117,719,4.117,720,4.117]],["title/miscellaneous/functions.html",[711,1.585,721,3.461]],["body/miscellaneous/functions.html",[7,0.631,11,0.023,27,0.023,28,0.023,35,3.061,687,4.42,711,2.91,721,4.42,722,5.228]],["title/index.html",[7,0.344,723,2.848,724,2.848]],["body/index.html",[4,0.26,11,0.025,27,0.018,28,0.018,297,2.755,670,2.755,725,3.703,726,3.703,727,4.909,728,3.703,729,3.703,730,3.703,731,3.703,732,3.703,733,3.703,734,5.506,735,3.703,736,3.703,737,3.703,738,3.703,739,5.506,740,6.396,741,3.703,742,3.703,743,3.703,744,6.269,745,3.703,746,3.703,747,4.909,748,3.703,749,3.703,750,3.703,751,3.703,752,4.909,753,4.909,754,3.703,755,3.703,756,3.703,757,4.909,758,4.909,759,3.703,760,3.703,761,3.703,762,3.703,763,3.703,764,3.131,765,3.703,766,3.703,767,3.703,768,3.703,769,3.703,770,3.703,771,3.703,772,3.703,773,3.703,774,3.703,775,3.131,776,3.703,777,3.703,778,3.703,779,3.703,780,3.703,781,3.703,782,3.131]],["title/modules.html",[31,2.207]],["body/modules.html",[11,0.022,27,0.022,28,0.022,30,3.218,31,2.291,41,2.925,42,2.474,43,2.925,44,2.925,764,5.584,783,6.603,784,6.603,785,6.603]],["title/overview.html",[786,3.923]],["body/overview.html",[2,1.465,11,0.025,18,2.897,27,0.017,28,0.017,29,1.274,30,4.478,31,1.577,32,1.577,33,1.845,34,1.845,35,1.577,36,1.845,37,1.845,38,2.803,39,2.803,40,2.803,41,4.072,42,3.251,43,3.775,44,3.901,45,2.645,46,2.536,47,1.845,48,1.845,67,1.465,73,1.19,111,2.665,179,2.803,181,2.803,182,2.803,183,3.16,352,2.466,401,2.803,402,2.803,454,2.897,470,2.803,471,2.803,492,2.466,545,2.897,564,2.466,596,2.803,598,2.803,786,2.803,787,3.315,788,3.315,789,3.315,790,3.315,791,3.315]],["title/properties.html",[279,1.126,691,2.408]],["body/properties.html",[11,0.025,27,0.022,28,0.022,279,1.418,297,3.834,775,4.358,782,4.358,792,5.154,793,5.154,794,5.154]],["title/miscellaneous/variables.html",[711,1.585,795,3.461]],["body/miscellaneous/variables.html",[7,0.512,11,0.026,15,1.092,27,0.02,28,0.02,91,0.972,116,3.581,166,3.988,168,3.588,172,2.179,189,2.985,207,3.588,246,2.019,271,3.157,370,4.124,371,3.749,548,4.593,683,3.157,685,3.588,686,3.157,711,2.363,713,3.588,715,3.588,795,3.588,796,5.361,797,4.244,798,4.244,799,4.244,800,4.244,801,4.244,802,4.244,803,4.244]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":569,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":793,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":564,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["1.4.6",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["10.0.0",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["11",{"_index":790,"title":{},"body":{"overview.html":{}}}],["1h",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["2",{"_index":791,"title":{},"body":{"overview.html":{}}}],["200",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["201",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["3.1.1",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["30d",{"_index":719,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["4",{"_index":788,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":392,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["5",{"_index":787,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["5.6.0",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":390,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["7.8.1",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":789,"title":{},"body":{"overview.html":{}}}],["access",{"_index":717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["access_token",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["accesstokensecret",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":489,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["admin",{"_index":654,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["aktifkan",{"_index":413,"title":{},"body":{"injectables/PrismaService.html":{}}}],["allowedorderby",{"_index":624,"title":{},"body":{"injectables/UserService.html":{}}}],["allowedsort",{"_index":628,"title":{},"body":{"injectables/UserService.html":{}}}],["already",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":765,"title":{},"body":{"index.html":{}}}],["another",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["app",{"_index":742,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":733,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arguments",{"_index":177,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["asc",{"_index":629,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["async",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":72,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["auth.controller",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth.dto.ts",{"_index":510,"title":{},"body":{"classes/SignInAuthDto.html":{},"coverage.html":{}}}],["auth.dto.ts:4",{"_index":511,"title":{},"body":{"classes/SignInAuthDto.html":{}}}],["auth.dto.ts:6",{"_index":512,"title":{},"body":{"classes/SignInAuthDto.html":{}}}],["auth.service",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.ts",{"_index":278,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["auth.ts:10",{"_index":286,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.ts:12",{"_index":287,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.ts:13",{"_index":281,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.ts:14",{"_index":288,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.ts:6",{"_index":283,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth.ts:8",{"_index":285,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["auth/auth.guard",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":601,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["authcontroller",{"_index":75,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":62,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":164,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":149,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":41,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":775,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":111,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":766,"title":{},"body":{"index.html":{}}}],["based",{"_index":176,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["baseurl",{"_index":555,"title":{},"body":{"controllers/UserController.html":{}}}],["bcrypt",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(signinauthdto.password",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensaltsync(saltorrounds",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["bcrypt.hash(password",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["berhasil",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["body.password",{"_index":591,"title":{},"body":{"controllers/UserController.html":{}}}],["boolean",{"_index":498,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":785,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":783,"title":{},"body":{"modules.html":{}}}],["building",{"_index":728,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":367,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["canactivate",{"_index":150,"title":{},"body":{"injectables/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":155,"title":{},"body":{"injectables/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["catch(err",{"_index":667,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword",{"_index":525,"title":{},"body":{"controllers/UserController.html":{}}}],["changepassword(id",{"_index":526,"title":{},"body":{"controllers/UserController.html":{}}}],["check",{"_index":579,"title":{},"body":{"controllers/UserController.html":{}}}],["class",{"_index":21,"title":{"classes/Auth.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/Pagination.html":{},"classes/Product.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":73,"title":{},"body":{"classes/Auth.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/Pagination.html":{},"classes/Product.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":401,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":402,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":403,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_productmodule",{"_index":470,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":471,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":596,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":597,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":598,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["compare",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["config/prisma/prisma.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('allowed",{"_index":508,"title":{},"body":{"guards/RolesGuard.html":{}}}],["console.log('hjehe",{"_index":381,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log('user",{"_index":506,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["console.log('userid",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(req.body",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["const",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{}}}],["constructor(reflector",{"_index":152,"title":{},"body":{"injectables/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["contains",{"_index":639,"title":{},"body":{"injectables/UserService.html":{}}}],["context",{"_index":158,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":171,"title":{},"body":{"injectables/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":170,"title":{},"body":{"injectables/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp",{"_index":378,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":502,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('product",{"_index":459,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('user",{"_index":552,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["core/decorators/public.decorator",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{}}}],["core/decorators/role.decorator",{"_index":549,"title":{},"body":{"controllers/UserController.html":{}}}],["coverage",{"_index":670,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":553,"title":{},"body":{"controllers/UserController.html":{}}}],["create(createproductdto",{"_index":438,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["create(createuserdto",{"_index":530,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createauthdto",{"_index":100,"title":{"classes/CreateAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["createdat",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["createdby",{"_index":487,"title":{},"body":{"injectables/ProductService.html":{}}}],["createdid",{"_index":296,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["createproductdto",{"_index":293,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createproductdto.createdat",{"_index":481,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproductdto.createdid",{"_index":483,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproductdto.updatedat",{"_index":482,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproductdto.updatedid",{"_index":484,"title":{},"body":{"injectables/ProductService.html":{}}}],["createuserdto",{"_index":215,"title":{"classes/CreateUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.createdat",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["createuserdto.email",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto.password",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto.updatedat",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["curenturl",{"_index":558,"title":{},"body":{"controllers/UserController.html":{}}}],["curenturl.replace(`page=${filter.page",{"_index":570,"title":{},"body":{"controllers/UserController.html":{}}}],["current_page",{"_index":361,"title":{},"body":{"interfaces/Links.html":{},"classes/Pagination.html":{}}}],["currentpage",{"_index":646,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["date().gettime",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/ProductController.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":370,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":446,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["delete('signout",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":630,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":297,"title":{},"body":{"classes/CreateProductDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":743,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":456,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/filter",{"_index":551,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/signin",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/signup",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":458,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":754,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":729,"title":{},"body":{"index.html":{}}}],["email",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/SignInAuthDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["emit",{"_index":415,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enum",{"_index":327,"title":{},"body":{"classes/FilterUserDto.html":{}}}],["enumerations",{"_index":712,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":162,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["error",{"_index":419,"title":{},"body":{"injectables/PrismaService.html":{}}}],["event",{"_index":416,"title":{},"body":{"injectables/PrismaService.html":{}}}],["example",{"_index":739,"title":{},"body":{"index.html":{}}}],["exception",{"_index":175,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["executioncontext",{"_index":156,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{}}}],["exists",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoggingInterceptor.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":148,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{}}}],["extractjwt",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":535,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["filter.email",{"_index":621,"title":{},"body":{"injectables/UserService.html":{}}}],["filter.name",{"_index":623,"title":{},"body":{"injectables/UserService.html":{}}}],["filter.page",{"_index":565,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["filter.perpage",{"_index":619,"title":{},"body":{"injectables/UserService.html":{}}}],["filter.sort",{"_index":632,"title":{},"body":{"injectables/UserService.html":{}}}],["filter.sortby",{"_index":626,"title":{},"body":{"injectables/UserService.html":{}}}],["filteruserdto",{"_index":318,"title":{"classes/FilterUserDto.html":{}},"body":{"classes/FilterUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":435,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(filter",{"_index":533,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":436,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":464,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":442,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["first",{"_index":354,"title":{},"body":{"interfaces/Links.html":{},"classes/Pagination.html":{},"controllers/UserController.html":{}}}],["firsturl",{"_index":567,"title":{},"body":{"controllers/UserController.html":{}}}],["found",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":727,"title":{},"body":{"index.html":{}}}],["function",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":721,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":665,"title":{},"body":{"injectables/UserService.html":{}}}],["generatetoken",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(payload",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':id",{"_index":443,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":723,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":603,"title":{},"body":{"injectables/UserService.html":{}}}],["gettoken(refreshtoken",{"_index":609,"title":{},"body":{"injectables/UserService.html":{}}}],["global",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["grow",{"_index":761,"title":{},"body":{"index.html":{}}}],["guard",{"_index":492,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":494,"title":{},"body":{"guards/RolesGuard.html":{}}}],["handlerequest",{"_index":151,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handlerequest(err",{"_index":159,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hash",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":772,"title":{},"body":{"index.html":{}}}],["httpcontext",{"_index":377,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["httpcontext.getrequest",{"_index":379,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["httpcontext.getresponse",{"_index":380,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["httpexception",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["httpexception('cannot",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["httpexception('email",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('id",{"_index":582,"title":{},"body":{"controllers/UserController.html":{}}}],["httpexception('user",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["httpexception(`${createuserdto.email",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":779,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["httpstatus.bad_request",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["httpstatus.conflict",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_acceptable",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus.not_found",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["id",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["identifier",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["if(!allowedorderby.includes(filter.sortby",{"_index":625,"title":{},"body":{"injectables/UserService.html":{}}}],["if(!allowedsort.includes(filter.sort.tolocalelowercase().trim",{"_index":631,"title":{},"body":{"injectables/UserService.html":{}}}],["if(!compare)throw",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!refreshtoken",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["if(!role.includes(request.user.role",{"_index":503,"title":{},"body":{"guards/RolesGuard.html":{}}}],["if(!user",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["if(filter.name",{"_index":622,"title":{},"body":{"injectables/UserService.html":{}}}],["if(isnan(check",{"_index":581,"title":{},"body":{"controllers/UserController.html":{}}}],["if(isnan(id",{"_index":585,"title":{},"body":{"controllers/UserController.html":{}}}],["if(items.length",{"_index":642,"title":{},"body":{"injectables/UserService.html":{}}}],["if(user",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(userrole",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["ignoreexpiration",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":376,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":486,"title":{},"body":{"injectables/ProductService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":66,"title":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":738,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":741,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":365,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":366,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":350,"title":{"interfaces/Links.html":{},"interfaces/User.html":{}},"body":{"interfaces/Links.html":{},"classes/Pagination.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interface/user.interface",{"_index":618,"title":{},"body":{"injectables/UserService.html":{}}}],["interfaces",{"_index":352,"title":{},"body":{"interfaces/Links.html":{},"interfaces/User.html":{},"overview.html":{}}}],["is_public_key",{"_index":166,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":291,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/SignInAuthDto.html":{},"classes/UpdateUserDto.html":{}}}],["isempty",{"_index":309,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnotempty",{"_index":284,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isemail",{"_index":282,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isnumber",{"_index":305,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty()@isstring",{"_index":303,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnumber",{"_index":310,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/FilterUserDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["ispublic",{"_index":168,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":290,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{}}}],["items",{"_index":560,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["items.length",{"_index":568,"title":{},"body":{"controllers/UserController.html":{}}}],["join",{"_index":768,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":331,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.config",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconfig",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconfig.accesstokensecret",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtconfig.expired",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconfig.refreshtokensecret",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["jwtexpired",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["jwtexpired.access",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["jwtexpired.refresh",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtfromrequest",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["jwtmodule.register",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["jwtstrategy",{"_index":183,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":776,"title":{},"body":{"index.html":{}}}],["kasih",{"_index":385,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["last",{"_index":355,"title":{},"body":{"interfaces/Links.html":{},"classes/Pagination.html":{},"controllers/UserController.html":{}}}],["lasturl",{"_index":572,"title":{},"body":{"controllers/UserController.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":417,"title":{},"body":{"injectables/PrismaService.html":{}}}],["license",{"_index":782,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":758,"title":{},"body":{"index.html":{}}}],["links",{"_index":351,"title":{"interfaces/Links.html":{}},"body":{"interfaces/Links.html":{},"classes/Pagination.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["log",{"_index":386,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{}}}],["logger",{"_index":364,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["logger('http",{"_index":372,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logger('roledenied",{"_index":500,"title":{},"body":{"guards/RolesGuard.html":{}}}],["logger(prismaservice.name",{"_index":411,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logger(userservice.name",{"_index":615,"title":{},"body":{"injectables/UserService.html":{}}}],["logging",{"_index":414,"title":{},"body":{"injectables/PrismaService.html":{}}}],["logginginterceptor",{"_index":59,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["logout",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalcount",{"_index":645,"title":{},"body":{"injectables/UserService.html":{}}}],["memberikan",{"_index":384,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["message",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{}}}],["metadata",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":387,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":711,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":757,"title":{},"body":{"index.html":{}}}],["mode",{"_index":747,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":771,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":777,"title":{},"body":{"index.html":{}}}],["name",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["nest",{"_index":734,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":781,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":374,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":518,"title":{},"body":{"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":165,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":178,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newpassword",{"_index":661,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":356,"title":{},"body":{"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"controllers/UserController.html":{}}}],["next.handle",{"_index":395,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nextpage",{"_index":562,"title":{},"body":{"controllers/UserController.html":{}}}],["nexturl",{"_index":574,"title":{},"body":{"controllers/UserController.html":{}}}],["node.js",{"_index":726,"title":{},"body":{"index.html":{}}}],["npm",{"_index":740,"title":{},"body":{"index.html":{}}}],["null",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["number",{"_index":280,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"interfaces/Links.html":{},"classes/Pagination.html":{},"injectables/ProductService.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["number(filter.page",{"_index":563,"title":{},"body":{"controllers/UserController.html":{}}}],["number(id",{"_index":580,"title":{},"body":{"controllers/UserController.html":{}}}],["object",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":369,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{}}}],["ok",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["onmoduleinit",{"_index":408,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":759,"title":{},"body":{"index.html":{}}}],["optional",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["orderby",{"_index":328,"title":{},"body":{"classes/FilterUserDto.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["orderby.updatedat",{"_index":627,"title":{},"body":{"injectables/UserService.html":{}}}],["originalurl",{"_index":388,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":786,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":691,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":320,"title":{},"body":{"classes/FilterUserDto.html":{},"injectables/UserService.html":{}}}],["page=${1",{"_index":571,"title":{},"body":{"controllers/UserController.html":{}}}],["page=${nextpage",{"_index":575,"title":{},"body":{"controllers/UserController.html":{}}}],["page=${number(filter.page",{"_index":577,"title":{},"body":{"controllers/UserController.html":{}}}],["page=${pagination.total_pages",{"_index":573,"title":{},"body":{"controllers/UserController.html":{}}}],["pagination",{"_index":358,"title":{"classes/Pagination.html":{}},"body":{"interfaces/Links.html":{},"classes/Pagination.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["pagination.current_page",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["pagination.links",{"_index":578,"title":{},"body":{"controllers/UserController.html":{}}}],["pagination.per_page",{"_index":649,"title":{},"body":{"injectables/UserService.html":{}}}],["pagination.total_items",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["pagination.total_pages",{"_index":566,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["param",{"_index":453,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":584,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["params",{"_index":429,"title":{},"body":{"injectables/PrismaService.html":{}}}],["parser",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":517,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createproductdto",{"_index":516,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["passport",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":330,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["password/:id",{"_index":528,"title":{},"body":{"controllers/UserController.html":{}}}],["patch",{"_index":452,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":450,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["payload",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.name",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.role",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["per_page",{"_index":362,"title":{},"body":{"interfaces/Links.html":{},"classes/Pagination.html":{}}}],["perpage",{"_index":321,"title":{},"body":{"classes/FilterUserDto.html":{},"injectables/UserService.html":{}}}],["please",{"_index":769,"title":{},"body":{"index.html":{}}}],["post",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["post('change",{"_index":527,"title":{},"body":{"controllers/UserController.html":{}}}],["post('refresh",{"_index":593,"title":{},"body":{"controllers/UserController.html":{}}}],["post('signin",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('xendit",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@usepipes(validationpipe",{"_index":439,"title":{},"body":{"controllers/ProductController.html":{}}}],["prefix",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["prev",{"_index":357,"title":{},"body":{"interfaces/Links.html":{},"classes/Pagination.html":{},"controllers/UserController.html":{}}}],["prevurl",{"_index":576,"title":{},"body":{"controllers/UserController.html":{}}}],["price",{"_index":298,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["prisma",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["prisma.service",{"_index":405,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":289,"title":{},"body":{"classes/CreateAuthDto.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":407,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":42,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":45,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["process.env.access_token_secret",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.refresh_token_secret",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":431,"title":{"classes/Product.html":{}},"body":{"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["product.controller",{"_index":473,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":457,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":295,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:13",{"_index":306,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:15",{"_index":301,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:16",{"_index":308,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:17",{"_index":300,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":307,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:6",{"_index":304,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:9",{"_index":302,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":455,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/product.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":433,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["production",{"_index":749,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":43,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productservice",{"_index":454,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":725,"title":{},"body":{"index.html":{}}}],["project",{"_index":760,"title":{},"body":{"index.html":{}}}],["promise",{"_index":499,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["promise.all",{"_index":637,"title":{},"body":{"injectables/UserService.html":{}}}],["properties",{"_index":279,"title":{"properties.html":{}},"body":{"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@delete('signout",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('refresh",{"_index":538,"title":{},"body":{"controllers/UserController.html":{}}}],["public()@post('signin')@usepipes(validationpipe",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('signup')@usepipes(validationpipe",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('xendit",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["put",{"_index":544,"title":{},"body":{"controllers/UserController.html":{}}}],["query",{"_index":418,"title":{},"body":{"injectables/PrismaService.html":{},"controllers/UserController.html":{}}}],["read",{"_index":770,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":153,"title":{},"body":{"injectables/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["refresh",{"_index":718,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["refresh_token",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["refreshtoken",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["refreshtoken(@req",{"_index":594,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtoken(req",{"_index":537,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtokensecret",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":437,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":468,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":445,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removes",{"_index":491,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["repository",{"_index":737,"title":{},"body":{"index.html":{}}}],["req",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["req.cookies.refreshtoken",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user['id",{"_index":461,"title":{},"body":{"controllers/ProductController.html":{}}}],["request",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/LoggingInterceptor.html":{},"controllers/ProductController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{}}}],["request.headers['host",{"_index":557,"title":{},"body":{"controllers/UserController.html":{}}}],["request.method",{"_index":504,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request.originalurl",{"_index":505,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request.url",{"_index":559,"title":{},"body":{"controllers/UserController.html":{}}}],["request.user.role",{"_index":507,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request.user['id",{"_index":586,"title":{},"body":{"controllers/UserController.html":{}}}],["request.user['role",{"_index":588,"title":{},"body":{"controllers/UserController.html":{}}}],["request['protocol",{"_index":556,"title":{},"body":{"controllers/UserController.html":{}}}],["res",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.clearcookie('refreshtoken",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.cookie('refreshtoken",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.send(204",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(200).json",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoggingInterceptor.html":{}}}],["response.on('finish",{"_index":382,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["results",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":548,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":493,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["run",{"_index":744,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":375,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["salt",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["saltorrounds",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["scalable",{"_index":730,"title":{},"body":{"index.html":{}}}],["search",{"_index":620,"title":{},"body":{"injectables/UserService.html":{}}}],["secret",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["secretorkey",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["server",{"_index":731,"title":{},"body":{"index.html":{}}}],["setelah",{"_index":383,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["setmetadata('roles",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":732,"title":{},"body":{"index.html":{}}}],["signin",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(signinauthdto",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signinauthdto",{"_index":84,"title":{"classes/SignInAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInAuthDto.html":{},"coverage.html":{}}}],["signinauthdto.email",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["signout",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signout(refreshtoken",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout(res",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(createauthdto",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(createuserdto",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["skip",{"_index":634,"title":{},"body":{"injectables/UserService.html":{}}}],["sort",{"_index":322,"title":{},"body":{"classes/FilterUserDto.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["sort.desc",{"_index":633,"title":{},"body":{"injectables/UserService.html":{}}}],["sortby",{"_index":323,"title":{},"body":{"classes/FilterUserDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":763,"title":{},"body":{"index.html":{}}}],["src/.../filter",{"_index":714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jwt.config.ts",{"_index":713,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.decorator.ts",{"_index":715,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../sort.ts",{"_index":716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/modules/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/modules/app.controller.ts:11",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/modules/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/modules/app.service.ts",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/modules/app.service.ts:5",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/modules/auth/auth.controller.ts",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/app/modules/auth/auth.controller.ts:15",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/app/modules/auth/auth.controller.ts:22",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/app/modules/auth/auth.controller.ts:36",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/app/modules/auth/auth.controller.ts:53",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/app/modules/auth/auth.guard.ts",{"_index":147,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/modules/auth/auth.guard.ts:10",{"_index":157,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/modules/auth/auth.guard.ts:21",{"_index":161,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/modules/auth/auth.guard.ts:6",{"_index":154,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/modules/auth/auth.module.ts",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/modules/auth/auth.service.ts",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/modules/auth/auth.service.ts:10",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:16",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:36",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:66",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:78",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/dto/signin",{"_index":509,"title":{},"body":{"classes/SignInAuthDto.html":{},"coverage.html":{}}}],["src/app/modules/auth/dto/signup",{"_index":277,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["src/app/modules/auth/entities/auth.entity.ts",{"_index":74,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/app/modules/product/dto/create",{"_index":294,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/app/modules/product/dto/update",{"_index":515,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/app/modules/product/entities/product.entity.ts",{"_index":432,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/app/modules/product/product.controller.ts",{"_index":434,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/app/modules/product/product.controller.ts:12",{"_index":440,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/app/modules/product/product.controller.ts:21",{"_index":441,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/app/modules/product/product.controller.ts:26",{"_index":444,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/app/modules/product/product.controller.ts:31",{"_index":451,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/app/modules/product/product.controller.ts:36",{"_index":447,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/app/modules/product/product.module.ts",{"_index":472,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/app/modules/product/product.service.ts",{"_index":474,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/app/modules/product/product.service.ts:11",{"_index":476,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/modules/product/product.service.ts:27",{"_index":477,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/modules/product/product.service.ts:31",{"_index":478,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/modules/product/product.service.ts:35",{"_index":480,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/modules/product/product.service.ts:39",{"_index":479,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/modules/product/product.service.ts:7",{"_index":475,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/modules/user/dto/create",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/app/modules/user/dto/filter",{"_index":319,"title":{},"body":{"classes/FilterUserDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/user/dto/update",{"_index":514,"title":{},"body":{"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/app/modules/user/interface/user.interface.ts",{"_index":522,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/modules/user/user.controller.ts",{"_index":524,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/app/modules/user/user.controller.ts:17",{"_index":532,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app/modules/user/user.controller.ts:22",{"_index":534,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app/modules/user/user.controller.ts:51",{"_index":536,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app/modules/user/user.controller.ts:58",{"_index":542,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app/modules/user/user.controller.ts:70",{"_index":529,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app/modules/user/user.controller.ts:82",{"_index":541,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app/modules/user/user.controller.ts:88",{"_index":540,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app/modules/user/user.module.ts",{"_index":599,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/modules/user/user.service.ts",{"_index":602,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/modules/user/user.service.ts:109",{"_index":614,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/modules/user/user.service.ts:141",{"_index":611,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/modules/user/user.service.ts:145",{"_index":610,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/modules/user/user.service.ts:16",{"_index":605,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/modules/user/user.service.ts:22",{"_index":616,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/modules/user/user.service.ts:23",{"_index":606,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/modules/user/user.service.ts:35",{"_index":607,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/modules/user/user.service.ts:75",{"_index":608,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/modules/user/user.service.ts:87",{"_index":612,"title":{},"body":{"injectables/UserService.html":{}}}],["src/config/jwt/jwt.config",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["src/config/jwt/jwt.config.ts",{"_index":683,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/config/jwt/jwt.strategy",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/config/jwt/jwt.strategy.ts",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/config/jwt/jwt.strategy.ts:16",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/jwt/jwt.strategy.ts:7",{"_index":333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/prisma/prisma.module",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["src/config/prisma/prisma.module.ts",{"_index":404,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/config/prisma/prisma.service",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["src/config/prisma/prisma.service.ts",{"_index":406,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/config/prisma/prisma.service.ts:29",{"_index":412,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/config/prisma/prisma.service.ts:30",{"_index":410,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/config/prisma/prisma.service.ts:5",{"_index":409,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/core/decorators/public.decorator",{"_index":550,"title":{},"body":{"controllers/UserController.html":{}}}],["src/core/decorators/public.decorator.ts",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/decorators/role.decorator.ts",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/filters/pagination",{"_index":617,"title":{},"body":{"injectables/UserService.html":{}}}],["src/core/filters/pagination.ts",{"_index":353,"title":{},"body":{"interfaces/Links.html":{},"classes/Pagination.html":{},"coverage.html":{}}}],["src/core/filters/pagination.ts:10",{"_index":396,"title":{},"body":{"classes/Pagination.html":{}}}],["src/core/filters/pagination.ts:11",{"_index":398,"title":{},"body":{"classes/Pagination.html":{}}}],["src/core/filters/pagination.ts:12",{"_index":397,"title":{},"body":{"classes/Pagination.html":{}}}],["src/core/filters/pagination.ts:8",{"_index":399,"title":{},"body":{"classes/Pagination.html":{}}}],["src/core/filters/pagination.ts:9",{"_index":400,"title":{},"body":{"classes/Pagination.html":{}}}],["src/core/filters/sort",{"_index":326,"title":{},"body":{"classes/FilterUserDto.html":{},"injectables/UserService.html":{}}}],["src/core/filters/sort.ts",{"_index":720,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/interceptors/logging.interceptor",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["src/core/interceptors/logging.interceptor.ts",{"_index":363,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/core/interceptors/logging.interceptor.ts:13",{"_index":373,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/core/interceptors/logging.interceptor.ts:14",{"_index":368,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/guard/roles.guard",{"_index":547,"title":{},"body":{"controllers/UserController.html":{}}}],["src/guard/roles.guard.ts",{"_index":495,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/guard/roles.guard.ts:10",{"_index":497,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/guard/roles.guard.ts:8",{"_index":496,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/main.ts",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":745,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":748,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":750,"title":{},"body":{"index.html":{}}}],["started",{"_index":724,"title":{"index.html":{}},"body":{}}],["starter",{"_index":736,"title":{},"body":{"index.html":{}}}],["statements",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["statusmessage",{"_index":389,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["stay",{"_index":773,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"interfaces/Links.html":{},"classes/Pagination.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":167,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["super.canactivate(context",{"_index":173,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["support",{"_index":764,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":784,"title":{},"body":{"modules.html":{}}}],["table",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["test",{"_index":753,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":756,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":755,"title":{},"body":{"index.html":{}}}],["tests",{"_index":752,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":762,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":421,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('error",{"_index":424,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('info",{"_index":426,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('query",{"_index":428,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('warn",{"_index":425,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$use(this.categoryfindmiddleware",{"_index":423,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$use(this.categorysoftdeletemiddleware",{"_index":422,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetoken(user",{"_index":666,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.signin(signinauthdto",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signout(refreshtoken",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(createauthdto",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatetoken(tokenpayload",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(refreshtoken",{"_index":663,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.debug(message",{"_index":427,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.logger.error(err",{"_index":668,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.error(message",{"_index":391,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RolesGuard.html":{}}}],["this.logger.log('begin",{"_index":635,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.log(`${query",{"_index":430,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.logger.log(message",{"_index":394,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.logger.warn(\"no",{"_index":643,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.warn('role",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.warn(message",{"_index":393,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{}}}],["this.prisma.product.create",{"_index":485,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.user.count",{"_index":638,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.create",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.findfirst",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":640,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.productservice.create(createproductdto",{"_index":462,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":463,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(+id",{"_index":465,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.remove(+id",{"_index":469,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(+id",{"_index":467,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.reflector.getallandoverride('roles",{"_index":501,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":169,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.userservice.create(createuserdto",{"_index":554,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall(filter",{"_index":561,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(+id",{"_index":583,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.gettoken(req.cookies.refreshtoken",{"_index":595,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(+id",{"_index":592,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(+id",{"_index":589,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepassword(+id",{"_index":590,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":174,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["token",{"_index":539,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["tokenpayload",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["total_items",{"_index":359,"title":{},"body":{"interfaces/Links.html":{},"classes/Pagination.html":{}}}],["total_pages",{"_index":360,"title":{},"body":{"interfaces/Links.html":{},"classes/Pagination.html":{}}}],["totalcount",{"_index":636,"title":{},"body":{"injectables/UserService.html":{}}}],["totalpages",{"_index":644,"title":{},"body":{"injectables/UserService.html":{}}}],["touch",{"_index":774,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":172,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":662,"title":{},"body":{"injectables/UserService.html":{}}}],["twitter",{"_index":780,"title":{},"body":{"index.html":{}}}],["type",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/Links.html":{},"injectables/LoggingInterceptor.html":{},"classes/Pagination.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"guards/RolesGuard.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":519,"title":{},"body":{"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":735,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":163,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception(err.message",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["unit",{"_index":751,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":794,"title":{},"body":{"properties.html":{}}}],["update",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":466,"title":{},"body":{"controllers/ProductController.html":{}}}],["update(id",{"_index":448,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["updatedby",{"_index":488,"title":{},"body":{"injectables/ProductService.html":{}}}],["updatedid",{"_index":299,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["updatepassword",{"_index":604,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepassword(id",{"_index":613,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepassworduserdto",{"_index":513,"title":{"classes/UpdatePasswordUserDto.html":{}},"body":{"classes/UpdatePasswordUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateproductdto",{"_index":449,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updates",{"_index":490,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateuserdto",{"_index":520,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto.updatedat",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["useclass",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":543,"title":{},"body":{"controllers/UserController.html":{}}}],["usepipes",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["usepipes(validationpipe",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["usepipes(validationpipe)@post",{"_index":531,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":160,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.controller",{"_index":600,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.dto.ts:10",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{}}}],["user.dto.ts:12",{"_index":521,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:4",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdatePasswordUserDto.html":{}}}],["user.dto.ts:5",{"_index":324,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:6",{"_index":325,"title":{},"body":{"classes/FilterUserDto.html":{}}}],["user.dto.ts:7",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{}}}],["user.dto.ts:8",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:9",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{}}}],["user.email",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.name",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":546,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/dto/create",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/user.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["user['sub",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["usercontroller",{"_index":523,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":460,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":44,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userrole",{"_index":587,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":545,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":332,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":334,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["validator",{"_index":292,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/SignInAuthDto.html":{},"classes/UpdatePasswordUserDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":371,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":795,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":792,"title":{},"body":{"properties.html":{}}}],["warn",{"_index":420,"title":{},"body":{"injectables/PrismaService.html":{}}}],["watch",{"_index":746,"title":{},"body":{"index.html":{}}}],["website",{"_index":778,"title":{},"body":{"index.html":{}}}],["world",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["xendit",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["xendit(req",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["you'd",{"_index":767,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/app.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n  ) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from '../../config/prisma/prisma.module';\nimport { UserModule } from './user/user.module';\nimport { PrismaService } from 'src/config/prisma/prisma.service';\nimport { ProductModule } from './product/product.module';\nimport { APP_INTERCEPTOR, APP_GUARD } from '@nestjs/core'\nimport { LoggingInterceptor } from 'src/core/interceptors/logging.interceptor';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthGuard } from './auth/auth.guard';\n\n@Module({\n  imports: [UserModule, PrismaModule, ProductModule, AuthModule],\n  controllers: [AppController],\n  providers: [\n    AppService, \n    PrismaService, \n    { provide: APP_INTERCEPTOR, useClass : LoggingInterceptor },\n    { provide : APP_GUARD, useClass : AuthGuard }\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                signout\n                            \n                            \n                                    \n                                    \n                                    \n                                signup\n                            \n                            \n                                    \n                                    \n                                    Async\n                                xendit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                        \n                    signin(signInAuthDto: SignInAuthDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('signin')@UsePipes(ValidationPipe)\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/auth/auth.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInAuthDto\n                                            \n                                                            SignInAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        signout\n                        \n                    \n                \n            \n            \n                \n                        \n                    signout(res: Response, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Delete('signout')\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/auth/auth.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(createAuthDto: CreateAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('signup')@UsePipes(ValidationPipe)\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/auth/auth.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAuthDto\n                                            \n                                                            CreateAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        xendit\n                        \n                    \n                \n            \n            \n                \n                        \n                    xendit(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('xendit')\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/auth/auth.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, ValidationPipe, UsePipes, Res, Delete, Req, Get } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateAuthDto } from './dto/signup-auth';\nimport { SignInAuthDto } from './dto/signin-auth.dto';\nimport { Public } from '../../../core/decorators/public.decorator';\nimport { Response, Request } from 'express'\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Public()\n  @Post('signup')\n  @UsePipes(ValidationPipe)\n  signup(@Body() createAuthDto: CreateAuthDto) {\n    return this.authService.signUp(createAuthDto);\n  }\n\n  @Public()\n  @Post('signin')\n  @UsePipes(ValidationPipe)\n  async signin(\n    @Body() signInAuthDto: SignInAuthDto,\n    @Res() res : Response\n  ) {\n    const { data, refreshToken } = await this.authService.signIn(signInAuthDto)\n    res.cookie('refreshToken', refreshToken)\n    return res.status(200).json({\n      statusCode : 200,\n      data : data\n    })\n  }\n\n  @Public()\n  @Delete('signout')\n  async signout(\n    @Res() res : Response,\n    @Req() req : Request\n  ) {\n    const refreshToken = req.cookies.refreshToken\n    if(!refreshToken) return res.send(204)\n    await this.authService.signout(refreshToken)\n    res.clearCookie('refreshToken')\n\n    return res.status(200).json({\n      statusCode : 200,\n      message : \"Berhasil logout\"\n    })\n  }\n\n  @Public()\n  @Post('xendit')\n  async xendit(\n    @Req() req : Request\n  ) {\n    console.log(req.body)\n    return {\n      statusCode : 200,\n      message : \"Ok\"\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardPassport('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/auth.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/auth/auth.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/auth/auth.guard.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UnauthorizedException, ExecutionContext, Injectable, CanActivate, Request } from '@nestjs/common';\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport';\nimport { Reflector } from '@nestjs/core'\nimport { IS_PUBLIC_KEY } from '../../../core/decorators/public.decorator';\n@Injectable()\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n  handleRequest(err, user, info) {\n  // You can throw an exception based on either \"info\" or \"err\" arguments\n  if (err || !user) {\n    throw err || new UnauthorizedException();\n  }\n  return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nAuthModule->AuthModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/config/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConfig } from 'src/config/jwt/jwt.config';\nimport { PassportModule } from '@nestjs/passport'\nimport { JwtStrategy } from 'src/config/jwt/jwt.strategy';\n@Module({\n  imports : [PrismaModule, PassportModule, JwtModule.register({\n    // global : true,\n    // secret : jwtConfig.accessTokenSecret,\n    // signOptions : { expiresIn : jwtConfig.expired }\n  }),\n],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports : [AuthModule]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateToken\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signout\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n            \n                \ngenerateToken(payload: any, expired: JwtExpired)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/auth/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expired\n                                            \n                                                            JwtExpired\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInAuthDto: SignInAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/auth/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInAuthDto\n                                            \n                                                            SignInAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signout\n                        \n                    \n                \n            \n            \n                \n                        \n                    signout(refreshToken: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/auth/auth.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/auth/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, ExecutionContext } from '@nestjs/common';\nimport { CreateUserDto } from '../user/dto/create-user.dto';\nimport { PrismaService } from 'src/config/prisma/prisma.service';\nimport * as bcrypt from 'bcrypt'\nimport { SignInAuthDto } from './dto/signin-auth.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtExpired, jwtConfig } from 'src/config/jwt/jwt.config';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma : PrismaService,\n    private jwtService : JwtService,\n  ){}\n  \n  async signUp(createUserDto: CreateUserDto) {\n    const user = await this.prisma.user.findUnique({ where : { email : createUserDto.email} })\n    if(user) throw new HttpException(`${createUserDto.email} already exists`, HttpStatus.CONFLICT)\n    createUserDto.createdAt = new Date().getTime() / 1000\n    createUserDto.updatedAt = new Date().getTime() / 1000\n    const saltOrRounds = 10;\n    const salt = bcrypt.genSaltSync(saltOrRounds);\n    const password = createUserDto.password;\n    const hash = await bcrypt.hash(password, salt);\n    createUserDto.password = hash\n    const create = await this.prisma.user.create({\n      data : createUserDto,\n      select : { id : true, email : true, name : true, role : true, createdAt : true }\n    })\n    return {\n      statusCode : 201,\n      data : create\n    }\n  }\n\n  async signIn(signInAuthDto: SignInAuthDto) {\n    const user = await this.prisma.user.findUnique({ \n      where : { email : signInAuthDto.email},\n    })\n    if(!user) throw new HttpException('email or password wrong!', HttpStatus.BAD_REQUEST)\n\n    const password = user.password\n    const compare = await bcrypt.compare(signInAuthDto.password, password)\n    if(!compare)throw new HttpException('email or password wrong!', HttpStatus.BAD_REQUEST)\n\n    const tokenPayload = {\n      sub   : user.id,\n      name  : user.name,\n      email : user.email,\n      role  : user.role\n    }\n\n    const refreshToken = this.generateToken(tokenPayload, JwtExpired.REFRESH)\n    const update = await this.prisma.user.update({\n      where : { email : signInAuthDto.email },\n      data : { refresh_token : refreshToken },\n      select : { id : true, email : true, name : true, role : true, createdAt : true, updatedAt : true }\n    })\n    const access_token = this.generateToken(tokenPayload, JwtExpired.ACCESS)\n    return {\n      refreshToken,\n      data : {...update, access_token}\n    }\n  }\n\n  async signout(refreshToken : any){\n    const user = await this.prisma.user.findFirst({\n      where : { refresh_token : refreshToken }\n    })\n    if(!user) return true\n    await this.prisma.user.update({\n      where : { id : user.id },\n      data : { refresh_token : null }\n    })\n    return true\n  }\n\n  generateToken(payload : any, expired : JwtExpired) {\n    const secret = expired == '1h' ? jwtConfig.accessTokenSecret : jwtConfig.refreshTokenSecret\n    return this.jwtService.sign(payload, {\n      secret: secret,\n      expiresIn: expired,\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/dto/signup-auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/dto/signup-auth.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/dto/signup-auth.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/dto/signup-auth.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/dto/signup-auth.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/dto/signup-auth.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/dto/signup-auth.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"@prisma/client\";\nimport { IsString, IsNotEmpty, IsEmail } from \"class-validator\";\nexport class CreateAuthDto {\n  @IsNotEmpty()\n  @IsEmail()\n  email     : string\n  @IsNotEmpty()\n  name      : string\n  @IsNotEmpty()\n  password  : string\n\n  role : Role\n  createdAt : number\n  updatedAt : number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createdId\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/product/dto/create-product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/product/dto/create-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/product/dto/create-product.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/product/dto/create-product.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/product/dto/create-product.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/product/dto/create-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/product/dto/create-product.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmpty, IsNotEmpty, IsNumber, IsString } from 'class-validator'\n\nexport class CreateProductDto {  \n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsString()\n  description: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  price: number;\n\n  createdId: number;\n  updatedId: number;\n  createdAt: number;\n  updatedAt: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from \"class-validator\";\nexport class CreateUserDto {\n  @IsNotEmpty()\n  email     : string\n\n  @IsNotEmpty()\n  name      : string\n  password  : string\n  createdAt : number\n  updatedAt : number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterUserDto.html":{"url":"classes/FilterUserDto.html","title":"class - FilterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/dto/filter-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                page\n                            \n                            \n                                perPage\n                            \n                            \n                                    Optional\n                                sort\n                            \n                            \n                                    Optional\n                                sortBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/filter-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/filter-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/filter-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        perPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/filter-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sort\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/filter-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/filter-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Sort } from \"src/core/filters/sort\"\nimport { IsString, IsNotEmpty, IsNumber } from \"class-validator\";\n\nexport class FilterUserDto {\n  page    : number\n  perPage : number\n  name?   : string\n  email?  : string\n  sort?   : Sort\n  sortBy? : string\n\n}\nexport enum OrderBy {\n  updatedAt = 'updatedAt',\n  createdAt = 'createdAt',\n  name      = 'name',\n  email     = 'email',\n  id        = 'id',\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/jwt/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/config/jwt/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/config/jwt/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { jwtConfig } from './jwt.config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConfig.accessTokenSecret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { id: payload.sub, name: payload.name, email: payload.email, role : payload.role };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Links.html":{"url":"interfaces/Links.html","title":"interface - Links","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Links\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/pagination.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            prev\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Links {\n  first : string;\n  next  : string;\n  prev  : string;\n  last  : string;\n}\nexport class Pagination {\n  total_items   : number;\n  total_pages   : number;\n  current_page  : number;\n  per_page      : number;\n  links        ?: Links;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interceptors/logging.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/interceptors/logging.interceptor.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('HTTP')\n                    \n                \n                    \n                        \n                                Defined in src/core/interceptors/logging.interceptor.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Request, Response } from 'express';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  private readonly logger = new Logger('HTTP');\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const httpContext = context.switchToHttp();\n    const request = httpContext.getRequest();\n    const response = httpContext.getResponse();\n    console.log('hjehe')\n    response.on('finish', () => {\n      // setelah memberikan response, kasih log\n      const { method, originalUrl } = request;\n      const { statusCode, statusMessage } = response;\n\n      const message = `${method} ${originalUrl} ${statusCode} ${statusMessage}`;\n\n      if (statusCode >= 500) {\n        return this.logger.error(message);\n      }\n\n      if (statusCode >= 400) {\n        return this.logger.warn(message);\n      }\n\n      return this.logger.log(message);\n    });\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/pagination.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current_page\n                            \n                            \n                                    Optional\n                                links\n                            \n                            \n                                per_page\n                            \n                            \n                                total_items\n                            \n                            \n                                total_pages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        current_page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/core/filters/pagination.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        links\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Links\n\n                    \n                \n                    \n                        \n                                Defined in src/core/filters/pagination.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        per_page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/core/filters/pagination.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total_items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/core/filters/pagination.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total_pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/core/filters/pagination.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Links {\n  first : string;\n  next  : string;\n  prev  : string;\n  last  : string;\n}\nexport class Pagination {\n  total_items   : number;\n  total_pages   : number;\n  current_page  : number;\n  per_page      : number;\n  links        ?: Links;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers : [PrismaService],\n  exports : [PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/config/prisma/prisma.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/config/prisma/prisma.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PrismaService.name)\n                    \n                \n                    \n                        \n                                Defined in src/config/prisma/prisma.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, Logger } from '@nestjs/common';\nimport { PrismaClient, Prisma } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  constructor() {\n    super({\n      // Aktifkan logging\n      log: [\n        {\n          emit: 'event',\n          level: 'query',\n        },\n        {\n          emit: 'event',\n          level: 'error',\n        },\n        {\n          emit: 'event',\n          level: 'info',\n        },\n        {\n          emit: 'event',\n          level: 'warn',\n        },\n      ],\n    });\n  }\n  private readonly logger = new Logger(PrismaService.name);\n  async onModuleInit() {\n    await this.$connect();\n    // this.$use(this.categorySoftDeleteMiddleware);\n    // this.$use(this.categoryFindMiddleware);\n    this.$on('error', ({ message }) => {\n      this.logger.error(message);\n    });\n    this.$on('warn', ({ message }) => {\n      this.logger.warn(message);\n    });\n    this.$on('info', ({ message }) => {\n      this.logger.debug(message);\n    });\n    this.$on('query', ({ query, params }) => {\n      this.logger.log(`${query}; ${params}`);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/product/product.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/product/product.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/product/product.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/product/product.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/product/product.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Req, ValidationPipe, UsePipes } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Request } from 'express'\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  create(\n    @Body() createProductDto: CreateProductDto,\n    @Req() req : Request\n  ) {\n    const userId = req.user['id']\n    return this.productService.create(createProductDto, userId);\n  }\n\n  @Get()\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.productService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.update(+id, updateProductDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.productService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaService->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaService } from 'src/config/prisma/prisma.service';\n\n@Module({\n  controllers: [ProductController],\n  providers: [ProductService, PrismaService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/product/product.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/product/product.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/product/product.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/product/product.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/product/product.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/product/product.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { PrismaService } from 'src/config/prisma/prisma.service';\n\n@Injectable()\nexport class ProductService {\n\n  constructor(private prisma : PrismaService) {}\n\n  async create(createProductDto: CreateProductDto, userId : number) {\n    createProductDto.createdAt = new Date().getTime() / 1000\n    createProductDto.updatedAt = new Date().getTime() / 1000\n    createProductDto.createdId = userId\n    createProductDto.updatedId = userId\n\n    const create = await this.prisma.product.create({\n      data : createProductDto,\n      include : { createdBy : { select : { name : true } }, updatedBy : { select : { name : true } }, }\n    })\n    return {\n      statusCode : 200,\n      data : create\n    }\n  }\n\n  findAll() {\n    return `This action returns all product`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} product`;\n  }\n\n  update(id: number, updateProductDto: UpdateProductDto) {\n    return `This action updates a #${id} product`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} product`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guard/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guard/roles.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guard/roles.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, HttpException, HttpStatus, Injectable, Logger } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport {Reflector} from '@nestjs/core'\n\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  private readonly logger = new Logger('RoleDenied');\n  constructor(private reflector : Reflector){}\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const role = this.reflector.getAllAndOverride('roles', [\n      context.getHandler(), \n      context.getClass()])\n    const request = context.switchToHttp().getRequest();\n    if(!role.includes(request.user.role)){\n      const message = `${request.method} ${request.originalUrl} `;\n      this.logger.error(message)\n      return false\n    }\n    console.log('user role', request.user.role)\n    console.log('allowed role', role)\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInAuthDto.html":{"url":"classes/SignInAuthDto.html","title":"class - SignInAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/dto/signin-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/dto/signin-auth.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/dto/signin-auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsEmail } from \"class-validator\";\nexport class SignInAuthDto {\n  @IsNotEmpty()\n  email     : string\n  @IsNotEmpty()\n  password  : string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePasswordUserDto.html":{"url":"classes/UpdatePasswordUserDto.html","title":"class - UpdatePasswordUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/dto/update-password-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/update-password-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/update-password-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber } from \"class-validator\";\nexport class UpdatePasswordUserDto {\n  @IsNotEmpty()\n  password      : string\n\n  @IsNotEmpty()\n  @IsNumber()\n  updatedAt : number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/product/dto/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProductDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/update-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/update-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsNumber } from \"class-validator\";\nexport class UpdateUserDto {\n  @IsNotEmpty()\n  @IsEmail()\n  email     : string\n\n  @IsNotEmpty()\n  name      : string\n\n  @IsNotEmpty()\n  @IsNumber()\n  updatedAt : number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/interface/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id        : number\n  email     : string\n  name      : string\n  createdAt : number\n  updatedAt : number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                changePassword\n                            \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                refreshToken\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(id: number, body: any, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-password/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/user/user.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(ValidationPipe)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/user/user.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(filter: FilterUserDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/user/user.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FilterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/user/user.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('refresh-token')\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/user/user.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/user/user.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateUserDto: UpdateUserDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/app/modules/user/user.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UsePipes, ValidationPipe, Query, Req, UseGuards, HttpException, Put, HttpStatus } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { RolesGuard } from 'src/guard/roles.guard';\nimport { Role, Roles } from '../../../core/decorators/role.decorator';\nimport { Request } from 'express'\nimport { Public } from 'src/core/decorators/public.decorator';\nimport { FilterUserDto } from './dto/filter-user.dto';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @UsePipes(ValidationPipe)\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  async findAll(\n    @Query() filter : FilterUserDto,\n    @Req() request : Request,\n  ){\n    const baseUrl = request['protocol'] + '://' + request.headers['host']\n    const curentUrl = request.url\n    const { items, pagination } = await this.userService.findAll(filter)\n    let nextPage = Number(filter.page) + 1\n    if( filter.page >= pagination.total_pages ) {\n      nextPage = null\n    }\n    const firstUrl = (items.length > 0 || pagination.total_pages > 0) ? baseUrl + curentUrl.replace(`page=${filter.page}`, `page=${1}`) : null\n    const lastUrl = (items.length > 0 || pagination.total_pages > 0) ? baseUrl + curentUrl.replace(`page=${filter.page}`, `page=${pagination.total_pages}`) : null\n    const nextUrl = nextPage ? baseUrl + curentUrl.replace(`page=${filter.page}`, `page=${nextPage}`) : null\n    const prevUrl = filter.page > 1 ? baseUrl + curentUrl.replace(`page=${filter.page}`, `page=${Number(filter.page) - 1}`) : null\n    const links = {\n      next  : nextUrl,\n      prev  : prevUrl,\n      first : firstUrl,\n      last  : lastUrl\n    }\n    pagination.links = links\n    return {\n      data          : items,\n      pagination    : pagination,\n    }\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    const check = Number(id)\n    if(isNaN(check)) throw new HttpException('id must be a number', HttpStatus.BAD_REQUEST)\n    return this.userService.findOne(+id);\n  }\n\n  @Patch(':id') \n  update(\n    @Param('id') id: number, \n    @Body() updateUserDto: UpdateUserDto,\n    @Req() request : Request\n  ) {\n    if(isNaN(id)) throw new HttpException('id must be a number', HttpStatus.BAD_REQUEST)\n    const userId = request.user['id']\n    const userRole = request.user['role']\n    return this.userService.update(+id, updateUserDto, userId, userRole);\n  }\n\n  @Post('change-password/:id')\n  changePassword(\n    @Param('id') id: number, \n    @Body() body : any,\n    @Req() request : Request\n  ) {\n    if(isNaN(id)) throw new HttpException('id must be a number', HttpStatus.BAD_REQUEST)\n    const userId = request.user['id']\n    const userRole = request.user['role']\n    return this.userService.updatePassword(+id, body.password , userRole, userId);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(+id);\n  }\n\n  @Public()\n  @Post('refresh-token')\n  async refreshToken(@Req() req : Request){\n    return this.userService.getToken(req.cookies.refreshToken)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nUserModule -->\n\nAuthService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/config/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthService } from '../auth/auth.service';\n\n@Module({\n  imports : [PrismaModule, JwtModule],\n  controllers: [UserController],\n  providers: [UserService, AuthService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getToken\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, authService: AuthService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/user.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/user.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(filter: FilterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/user.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FilterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/user.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken(refreshToken: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/user.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/user.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateUserDto: UpdateUserDto, userId: number, userRole: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/user.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userRole\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(id: number, password: string, userRole: Role, userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/user.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userRole\n                                            \n                                                            Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UserService.name)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { PrismaService } from 'src/config/prisma/prisma.service';\nimport { Pagination } from 'src/core/filters/pagination';\nimport { Sort } from 'src/core/filters/sort';\nimport { User } from './interface/user.interface';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtExpired, jwtConfig } from 'src/config/jwt/jwt.config';\nimport { AuthService } from '../auth/auth.service';\nimport  * as bcrypt from 'bcrypt'\nimport { Role } from '@prisma/client';\nimport { UpdatePasswordUserDto } from './dto/update-password-user.dto';\nimport { FilterUserDto, OrderBy } from './dto/filter-user.dto';\n@Injectable()\nexport class UserService {\n  constructor(\n    private prisma : PrismaService,\n    private authService : AuthService,\n    private jwtService : JwtService,\n  ){}\n  private readonly logger  = new Logger(UserService.name)\n  async create(createUserDto: CreateUserDto) {\n    createUserDto.createdAt = new Date().getTime() / 1000\n    createUserDto.updatedAt = new Date().getTime() / 1000\n    const create = await this.prisma.user.create({\n      data : createUserDto\n    })\n    return {\n      statusCode : 201,\n      data : create\n    }\n  }\n\n  async findAll(filter: FilterUserDto) : Promise {\n    let page = +filter.page || 1\n    const perPage = +filter.perPage || 10\n    let search = filter.email\n\n    if(filter.name) {\n      search = filter.name\n    }\n    const allowedOrderBy = [ 'updatedAt', 'createdAt', 'name', 'email', 'id' ]\n    if(!allowedOrderBy.includes(filter.sortBy)){\n      filter.sortBy = OrderBy.updatedAt\n    }\n    const allowedSort = ['asc', 'desc']\n    if(!allowedSort.includes(filter.sort.toLocaleLowerCase().trim())){\n      filter.sort = Sort.DESC\n    }\n    const skip = (page - 1) * perPage;\n    this.logger.log('BEGIN GET USER')\n    const [ totalCount, items ] = await Promise.all([\n      this.prisma.user.count({ where :  { [filter.email ? \"email\" : \"name\"] : { contains : search } } }),\n      this.prisma.user.findMany({\n        where : { [filter.email ? \"email\" : \"name\"] : { contains : search } } ,\n        skip,\n        take: perPage,\n        select : { id : true, email : true, name : true, role : true, createdAt : true, updatedAt : true },\n        orderBy : { [filter.sortBy] : filter.sort },\n      })\n    ])\n    if(items.length === 0) this.logger.warn(\"NO DATA\")\n    const totalPages = Math.ceil(totalCount / perPage);\n    const currentPage = page;\n\n    const pagination = new Pagination()\n    pagination.total_items  = totalCount\n    pagination.total_pages  = totalPages\n    pagination.current_page = currentPage\n    pagination.per_page     = perPage\n    return { items, pagination }\n  }\n\n  async findOne(id: number) {\n    const user = await this.prisma.user.findUnique({\n      where : { id : id },\n      select : { id : true, email : true, name : true, createdAt : true, updatedAt : true }\n    })\n    if(!user) throw new HttpException('User not found', HttpStatus.NOT_FOUND)\n    return {\n      statusCode : 200,\n      data : user\n    }\n  }\n\n  async update(id: number, updateUserDto: UpdateUserDto, userId : number, userRole : Role) {\n    const user = await this.prisma.user.findUnique({\n      where : { id : id }\n    })\n    if(!user) throw new HttpException('User Not Found', HttpStatus.NOT_FOUND)\n    if(userRole !== 'ADMIN' && user.id !== userId) {\n      this.logger.warn('Role USER Cannot Update another user')\n      throw new HttpException('Cannot update another user', HttpStatus.NOT_ACCEPTABLE)\n    }\n\n    updateUserDto.updatedAt = new Date().getTime() / 1000\n    const update = await this.prisma.user.update({\n      where  : { id : id },\n      data   : updateUserDto,\n      select : { id : true, email : true, name : true, role : true, createdAt : true }\n    })\n    return {\n      statusCode : 200,\n      data       : update\n    }\n  }\n\n  async updatePassword(id : number, password : string, userRole : Role, userId : number) {\n    const user = await this.prisma.user.findUnique({\n      where : { id : id }\n    })\n    if(!user) throw new HttpException('User Not Found', HttpStatus.NOT_FOUND)\n    console.log('user', user)\n  console.log('userId', userId)\n    if(userRole !== 'ADMIN' && user.id !== userId) {\n      this.logger.warn('Role USER Cannot Update another user')\n      throw new HttpException('Cannot update another user', HttpStatus.NOT_ACCEPTABLE)\n    }\n\n    const saltOrRounds = 10;\n    const salt = bcrypt.genSaltSync(saltOrRounds);\n    const newPassword = await bcrypt.hash(password, salt);\n\n    const data : UpdatePasswordUserDto = {\n      password : newPassword,\n      updatedAt : new Date().getTime() / 1000\n    }\n    const update = await this.prisma.user.update({\n      where  : { id : id },\n      data   : data,\n      select : { id : true, email : true, name : true, role : true, createdAt : true }\n    })\n\n    return {\n      statusCode : 200,\n      data       : update,\n    }\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n\n  async getToken(refreshToken : any){\n    if(!refreshToken) throw new UnauthorizedException;\n    const user = await this.prisma.user.findFirst({\n        where: { refresh_token: refreshToken },\n        select : { id: true, name : true, email : true, role : true}\n    });\n    if(!user) throw new UnauthorizedException\n    try {\n      await this.jwtService.verifyAsync(refreshToken, {secret : jwtConfig.refreshTokenSecret });\n      user['sub'] = user.id\n      delete user.id\n      // generate new token\n      const token = this.authService.generateToken(user, JwtExpired.ACCESS)\n      return {\n        statusCode : 200,\n        data : { ...user, access_token : token }\n      }\n    } catch(err) {\n      this.logger.error(err)\n      throw new UnauthorizedException(err.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/modules/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/auth/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/auth/dto/signin-auth.dto.ts\n            \n            class\n            SignInAuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/auth/dto/signup-auth.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/user/dto/filter-user.dto.ts\n            \n            class\n            FilterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/user/dto/update-password-user.dto.ts\n            \n            class\n            UpdatePasswordUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/user/interface/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/config/jwt/jwt.config.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/jwt/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/decorators/role.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/filters/pagination.ts\n            \n            class\n            Pagination\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/filters/pagination.ts\n            \n            interface\n            Links\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/interceptors/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/guard/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @prisma/client : ^5.6.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JwtExpired   (src/.../jwt.config.ts)\n                        \n                        \n                            OrderBy   (src/.../filter-user.dto.ts)\n                        \n                        \n                            Role   (src/.../role.decorator.ts)\n                        \n                        \n                            Sort   (src/.../sort.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/jwt/jwt.config.ts\n    \n        \n            \n                \n                    \n                        \n                        JwtExpired\n                    \n                \n                        \n                            \n                                 ACCESS\n                            \n                        \n                        \n                            \n                                Value : 1h\n                            \n                        \n                        \n                            \n                                 REFRESH\n                            \n                        \n                        \n                            \n                                Value : 30d\n                            \n                        \n            \n        \n\n    src/app/modules/user/dto/filter-user.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderBy\n                    \n                \n                        \n                            \n                                 updatedAt\n                            \n                        \n                        \n                            \n                                Value : updatedAt\n                            \n                        \n                        \n                            \n                                 createdAt\n                            \n                        \n                        \n                            \n                                Value : createdAt\n                            \n                        \n                        \n                            \n                                 name\n                            \n                        \n                        \n                            \n                                Value : name\n                            \n                        \n                        \n                            \n                                 email\n                            \n                        \n                        \n                            \n                                Value : email\n                            \n                        \n                        \n                            \n                                 id\n                            \n                        \n                        \n                            \n                                Value : id\n                            \n                        \n            \n        \n\n    src/core/decorators/role.decorator.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n    src/core/filters/sort.ts\n    \n        \n            \n                \n                    \n                        \n                        Sort\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nAuthModule->AuthModule \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nProductModule -->\n\nPrismaService->ProductModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nUserModule -->\n\nAuthService->UserModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            jwtConfig   (src/.../jwt.config.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/config/jwt/jwt.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  accessTokenSecret : process.env.ACCESS_TOKEN_SECRET,\n  refreshTokenSecret : process.env.REFRESH_TOKEN_SECRET,\n  expired : JwtExpired.ACCESS\n}\n                    \n                \n\n\n        \n    \n\n    src/core/decorators/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata('roles', roles)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
